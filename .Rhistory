#run BIKER------------------------------------------
data <- biker_data(w=W_obs, s=S_obs, dA=dA_obs, priorQ=as.matrix(priorQ))
priors <- biker_priors(data)
priors$river_type_priors$logk_sd <- rep(0.30, ncol(W_obs)) #0.748
rstan:::rstudio_stanc("inst/stan/master.stan")
0.5625/0.7291667
35/48
9/16
35/48 * 4
rstan:::rstudio_stanc("inst/stan/master.stan")
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
library(settings)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
install.packages('roxygen2')
install.packages("roxygen2")
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
library(devtools)
load_al()
load_all()
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/BIKER/R/debugRiver.R", echo=TRUE)
#Calculate observed k600 with no measurement error
D_obs <- area/W_obs #[m]
V_obs <- Q_obs/area #[m/s]
dA_obs <- calcdA_mat(W_obs,H_obs) #[m2]
source("~/OneDrive - University of Massachusetts/Ongoing Projects/BIKER/R/debugRiver.R", echo=TRUE)
D_obs <- area/W_obs #[m]
V_obs <- Q_obs/area #[m/s]
dA_obs <- calcdA_mat(W_obs,H_obs) #[m2]
k_obs <- k600_model(D_obs, S_obs, V_obs) #k600 equation
k_obs <- colMeans(k_obs, na.rm=T)
#run BIKER------------------------------------------
data <- biker_data(w=W_obs, s=S_obs, dA=dA_obs, priorQ=as.matrix(priorQ))
priors <- biker_priors(data)
priors$river_type_priors$logk_sd <- rep(0.30, ncol(W_obs)) #0.748
priors$sigma_model$sigma_post = matrix(uncertainity, nrow=nrow(W_obs), ncol=ncol(W_obs)) #For this validation, we only want Rh uncertainty. Real implementation would use full model uncertainty (calculate in '~src\swot_k_model.R')
kest <- biker_estimate(bikerdata = data, bikerpriors = priors, meas_err=F,iter = 3000L) #meas err needs to be removed
View(kest)
library(devtools)
load_all()
getwd()
R CMD Rd2pdf BIKER
devtools::check_built(manual=TRUE)
devtools::check(manual=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
out$k600
out$n
posterior <- biker_estimate(bikerdata = data, meas_err=F,iter = 3000L) #meas err needs to be removed
#run BIKER------------------------------------------
data <- biker_data(w=W_obs, dA=dA_obs, priorQ=as.matrix(priorQ))
#run BIKER------------------------------------------
data <- biker_data(w=W_obs, s=NA, dA=dA_obs, priorQ=as.matrix(priorQ))
#prep river hydraulics-----------------------------------------------------------
S_obs=NA
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
devtools::check(manual = TRUE)
library(devtools)
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
devtools::install_github("craigbrinkerhoff/BIKER", ref='main', force=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
reconstructed_k600_low <- colMeans(62.82*g^(7/16)*S_obs^(9/16)*(1/out$n$conf.low)^(1/4)*((out$A0$conf.low+dA_obs)/W_obs)^(35/48))
reconstructed_k600_high <- colMeans(62.82*g^(7/16)*S_obs^(9/16)*(1/out$n$conf.high)^(1/4)*((out$A0$conf.high+dA_obs)/W_obs)^(35/48))
out$k600
reconstructed_k600_high
reconstructed_k600
reconstructed_k600_low
k_obs
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
library(devtools)
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
library(dplyr)
kpost <- extract(posterior, pars='logk', permuted = FALSE) %>%
melt()
View(kpost)
out$k600
3*3000*4
3*1000*4
3*1500*4
View(kpost)
t <- kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
filter(.data$parameters = 'logk[1]')
t <- kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
filter(.data$parameters == 'logk[1]')
chainExtract <- 3
t <- kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
filter(.data$parameters == 'logk[1]')
View(t)
hist(t$value)
t <- kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
filter(.data$parameters == 'logk[2]')
hist*t$parameters
hist(t$parameters)
View(t)
hist(t$value)
out$k600
priors$river_type_priors
priors$river_type_priors$logk_hat
exp(priors$river_type_priors$logk_hat)
View(V_obs)
View(t)
t <- kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
# mutate(value = exp(.data$value)) %>%
filter(.data$parameters == 'logk[2]')
hist(t$value)
kpost %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
filter(.data$parameters == 'logk[2]')
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value)) %>%
mutate(mean = exp(.data$mean))
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
out <- biker_extract(posterior)
out$k600
k_obs
#reconstruct posterior k600
reconstructed_k600 <- 62.82*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/mean(out$n$mean))^(1/4)*((mean(out$A0$mean)+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
out <- biker_extract(posterior)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
out <- biker_extract(posterior)
#reconstruct posterior k600
reconstructed_k600 <- 62.82*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/mean(out$n$mean))^(1/4)*((mean(out$A0$mean)+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
k_obs
out$k600
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
files
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
files
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
out$n
river
file
currPepsi
#extract reach-scale river hydraulics-----------------------------------------------------------
W_obs=ncvar_get(data_in,'Reach_Timeseries/W')
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
load_all()
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
out$n
exp(priors$river_type_priors$logk_hat)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
currPepsi
#extract reach-scale river hydraulics-----------------------------------------------------------
W_obs=ncvar_get(data_in,'Reach_Timeseries/W')
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
BIKER_validation_results <- read.csv("C:/Users/craig/Downloads/BIKER_validation_results.csv")
View(BIKER_validation_results)
logk_man <- extract(fitmodel, pars='logk_man', permuted = FALSE) %>%
melt()
logk_man <- extract(posterior, pars='logk_man', permuted = FALSE) %>%
melt()
View(logk_man)
View(logk_man)
kstats <- logk_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value)) %>%
rename(time = .data$parameters) %>%
mutate(time = gsub("^logk\\[", "", .data$time),
time = gsub("\\]$", "", .data$time),
time = as.numeric(.data$time)) %>%
arrange(.data$time)
chainExtract <- 3
kstats <- logk_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value)) %>%
rename(time = .data$parameters) %>%
mutate(time = gsub("^logk\\[", "", .data$time),
time = gsub("\\]$", "", .data$time),
time = as.numeric(.data$time)) %>%
arrange(.data$time)
kstats <- logk_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value)
)
View(kstats)
out$k600
logA_man <- extract(posterior, pars='logA_man', permuted = FALSE) %>%
melt()
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value)
)
View(Astats)
(mean(out$A0$mean)+colMeans(dA_obs, na.rm=T)
)
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value))
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value))
View(Astats)
alpha <- 1 - 0.95
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value))
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value)) %>%
mutate(xs = substr(.data$parameters, nchar(as.character(.data$parameters))-1, nchar(as.character(.data$parameters))-1)) %>%
select(c('xs', 'mean', 'conf.low', 'conf.high', 'sigma'))
View(Astats)
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value))
View(Astats)
matrix(Astats$mean, ncol=5)
matrix(Astats$mean, nrow=3
)
data.frame(Astats$mean, ncol=5)
matrix(Astats$mean, ncol=5)
matrix(t(Astats$mean), ncol=5)
matrix(Astats$mean, ncol=5, byr)
matrix(Astats$mean, ncol=5, byrow=FALSE)
matrix(Astats$mean, ncol=5, byrow=TRUE)
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value)) %>%
matrix(Astats$mean, ncol=5, byrow=TRUE)
View(Astats)
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value))
Astats <- matrix(Astats$mean, ncol=5, byrow=TRUE)
Astats_meam <- colMeans(matrix(Astats$mean, ncol=5, byrow=TRUE))
Astats <- logA_man %>%
mutate(chains = gsub("^chain:", "", .data$chains)) %>%
filter(.data$chains %in% chainExtract) %>%
mutate(value = exp(.data$value)) %>%
group_by(.data$parameters) %>%
summarize(mean = mean(.data$value),
conf.low = quantile(.data$value, alpha / 2),
conf.high = quantile(.data$value, 1 - (alpha / 2)),
sigma = sd(.data$value))
Astats_mean <- colMeans(matrix(Astats$mean, ncol=5, byrow=TRUE))
Astats
matrix(Astats$mean, ncol=5, byrow=TRUE)
Astats_mean
mean(out$A0$mean)+colMeans(dA_obs, na.rm=T)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
#reconstruct posterior k600
reconstructed_k600 <- out$theta$mean*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/mean(out$n$mean))^(1/4)*((mean(out$A0$mean)+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
#grab a dummy river
currPepsi <- files[3]
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
currPepsi
out$theta
priors$sigma_model$theta_hat
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
#reconstruct posterior k600
reconstructed_k600 <- out$theta$mean*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/(out$n$mean))^(1/4)*(((out$A0$mean)+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
out$A0
out$n
dA_obs
S_obs
#reconstruct posterior k600
reconstructed_k600 <- out$theta$mean*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/(out$n$mean))^(1/4)*(((out$A0$mean)+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
k_obs
out$k600
#reconstruct posterior k600
n <- matrix(out$n$mean)
#reconstruct posterior k600
n <- matrix(out$n$mean, ncol=ncol(S_obs))
n
#reconstruct posterior k600
n <- matrix(out$n$mean, ncol=ncol(S_obs), nrow=nrow(S_obs))
n
#reconstruct posterior k600
n <- matrix(out$n$mean, nrow=nrow(S_obs))
n
#reconstruct posterior k600
n <- matrix(out$n$mean, ncol=ncol(S_obs), nrow=nrow(S_obs), byrow = TRUE)
n
#reconstruct posterior k600
n <- matrix(out$n$mean, ncol=ncol(S_obs), nrow=nrow(S_obs), byrow = F)
n
A0 <- matrix(out$A0$mean, ncol=ncol(S_obs), nrow=nrow(S_obs), byrow = F)
reconstructed_k600 <- out$theta$mean*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/n)^(1/4)*((A0+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
#reconstruct posterior k600
n <- colMeans(matrix(out$n$mean, ncol=ncol(S_obs), nrow=nrow(S_obs), byrow = F))
A0 <- colMeans(matrix(out$A0$mean, ncol=ncol(S_obs), nrow=nrow(S_obs), byrow = F))
reconstructed_k600 <- out$theta$mean*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/n)^(1/4)*((A0+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
k_obs
reconstructed_k600 <- 61.82*g^(7/16)*colMeans(S_obs, na.rm=T)^(9/16)*(1/n)^(1/4)*((A0+colMeans(dA_obs, na.rm=T))/colMeans(W_obs, na.rm=T))^(35/48)
reconstructed_k600
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
dA_obs
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
w <- W_obs[1,]
h <- H_obs[1,]
k <- 2
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
W_obs=W_obs[-1,]
W_obs
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
W_obs
dA_obs
source("~/OneDrive - University of Massachusetts/Ongoing Projects/RSK600/src/debugBIKER.R", echo=TRUE)
library(devtools)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
devtools::check(manual=TRUE) #runs R CMD CHECK and generates pdf manual for package
results_by_riv <- read.csv("C:/Users/cbrinkerhoff/Downloads/results_by_riv.csv")
View(results_by_riv)
library(dplyr)
View(results_by_riv)
library(tidyr)
t <- gather(results_by_riv[results_by_riv$errFlag==0,], key=key, value=value, c('KGE', 'r', 'NRMSE', 'rBIAS'))
group_by(t, key) %>%
summarise(median = median(value),
mean=mean(value))
16/6
47/3
rm(t)
rm(results_by_riv)
widAHG <- readRDS("C:/Users/cbrinkerhoff/Downloads/widAHG.rds")
depAHG <- readRDS("C:/Users/cbrinkerhoff/Downloads/depAHG.rds")
summary(widAHG)
confint(depAHG)
confint(depAHG)[1,1]
depAHG
confint((depAHG))
confint(widAHG)
widAHG
confint(widAHG)[1,2]
confint(widAHG)
summary(depAHG)
depAHG$sigma
summary(depAHG)$coefficients[, 2]
str(depAHG)
summary(depAHG)$coefficients[, 2]
summary(depAHG)$sigma
summary(widAHG)$coefficients[, 2]
summary(widAHG)$sigma
0.4320*.5
.5*0.3084
(2/3)*0.3084
(2/3)*0.3084
library(devtools)
library(roxygen2)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
log(62.82)
pkgbuild::compile_dll() #this grabs everything and updates the actual package
roxygen2::roxygenise(load = "source") #This provides in-line function documentation
